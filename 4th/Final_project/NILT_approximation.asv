function x_t = NILT_approximation(X_func, t)

    M=10;

    [poles,residues] =  R_Approximation(M);

    % Initialize the approximation sum
    x_t_sum = 0;
    
    if mod(M,2)==0
        steps = M;
    else
        steps = (M-1);
        additional_term = (-1/t) * residues(1)* X_func(poles(1) / t);
    end

    % Loop through each pole-residue pair
    for i = 1:steps
        p_i = poles(i);
        k_i = residues(i);
        
        % Evaluate X(s) at s = p_i / t
        X_value = X_func(p_i / t);
        

        x_t_sum = x_t_sum +  k_i * X_value ;%+additional_term ;
    end
    %x_t_sum = x_t_sum + additional_term;
    % Compute the final approximation
    x_t = - (1 / t) * x_t_sum;
end